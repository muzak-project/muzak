#!/usr/bin/env ruby
# frozen_string_literal: true

require "muzak"
require "socket"
require "json"
require "open3"

DMENU_EXEC       = Muzak::Config.dmenu_exec || "dmenu"
DMENU_LINES_EXEC = Muzak::Config.dmenu_lines_exec || "dmenu -l 10"

def fatal(msg)
  STDERR.puts "Fatal: #{msg}"
  exit 1
end

def dmenu(options, lines: false)
  dmenu_cmd = lines ? DMENU_LINES_EXEC : DMENU_EXEC
  opts      = options.join("\n")

  Open3.popen2(dmenu_cmd) do |stdin, stdout|
    stdin.puts opts
    stdin.close
    stdout.gets
  end
end

def muzak_cmd(command)
  begin
    sock = TCPSocket.new Muzak::Config.daemon_host, Muzak::Config.daemon_port
  rescue
    fatal "Is muzakd running?"
  end

  sock.puts command unless command.empty?
  response = sock.gets
  sock.close

  JSON.parse(response)
end

command = dmenu Muzak::Cmd.commands

exit if command.nil? || command.empty?

arguments = case command.chomp
            when "enqueue-artist"
              artists = muzak_cmd("list-artists")["response"]["data"]["artists"]
              dmenu(artists, lines: true)
            when "enqueue-album"
              albums = muzak_cmd("list-albums")["response"]["data"]["albums"]
              dmenu(albums, lines: true)
            when "enqueue-playlist"
              playlists = muzak_cmd("list-playlists")["response"]["data"]["playlists"]
              dmenu(playlists, lines: true)
            end

command = "#{command.chomp} #{arguments}" if arguments

puts command

muzak_cmd command
